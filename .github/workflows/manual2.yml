# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: BUILD_APK_BY_MANUAL

on:
  workflow_dispatch:
    inputs:
      x_branch:
        description: '指定Xray-core分支'
        required: true
        default: 'main'
        type: choice
        options:
          - 'main'
      x_commit_id:
        description: '指定Xray-core使用commit id版本'
        required: true
        default: 'HEAD~0'
        type: string
      x_lib_repo:
        description: '指定AndroidLibXrayLite仓库'
        required: true
        default: '2dust'
        type: choice
        options:
          - 'DTCproto'
          - '2dust'
          - 'yuhan6665'
      x_lib_branch:
        description: '指定AndroidLibXrayLite分支'
        required: true
        default: 'main'
        type: string
      x_lib_commit_id:
        description: '指定AndroidLibXrayLite使用commit id版本'
        required: true
        default: 'HEAD~0'
        type: string
      ng_repo:
        description: '指定v2rayNG仓库'
        required: true
        default: '2dust'
        type: choice
        options:
          - '2dust'
          - 'yuhan6665'
      ng_branch:
        description: '指定v2rayNG分支'
        required: true
        default: 'master'
        type: string
      ng_commit_id:
        description: '指定v2rayNG使用commit id版本'
        required: true
        default: 'HEAD~0'
        type: string
      ng_build_gradle:
        description: '指定v2rayNG使用的build gradle文件仓库'
        required: true
        default: 'DTCproto'
        type: choice
        options:
          - 'DTCproto'
          - '2dust'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: java version
        run: |
          java --version

      - name: git clone AndroidLibXrayLite
        run: |
          mkdir -p ${{ github.workspace }}/build
          cd ${{ github.workspace }}/build
          git clone -b ${{ inputs.x_lib_branch }} https://github.com/${{ inputs.x_lib_repo }}/AndroidLibXrayLite.git
          cd ${{ github.workspace }}/build/AndroidLibXrayLite
          git reset --hard ${{ inputs.x_lib_commit_id }}

      - name: use git remote repo xray[current]
        if: ${{ inputs.x_lib_repo == 'DTCproto' }}
        run: |
          cd ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild
          rm -rf Xray-core
          git clone -b ${{ inputs.x_branch }} https://github.com/XTLS/Xray-core.git
          cd ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild/Xray-core
          git reset --hard ${{ inputs.x_commit_id }}
          echo "x_short_version=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          echo ${x_short_version} | xargs -I '{}' sed -i 's/f7c20b8/{}/g' ${{ github.workspace }}/build/AndroidLibXrayLite/libv2ray_main.go

      - name: use git remote repo xray
        if: ${{ inputs.x_lib_repo != 'DTCproto' }}
        run: |
          mkdir -p ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild
          cd ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild
          rm -rf Xray-core
          git clone -b ${{ inputs.x_branch }} https://github.com/XTLS/Xray-core.git
          cd ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild/Xray-core
          git reset --hard ${{ inputs.x_commit_id }}
          echo "x_short_version=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          echo ${x_short_version}
          echo ${x_short_version} | xargs -I '{}' sed -e 's/fmt.Sprintf("Lib v%d, Xray-core v%s", version, v2core.Version())/fmt.Sprintf("(Lib)Xray-core v%s", v2core.Version()+"@{}")/g' ${{ github.workspace }}/build/AndroidLibXrayLite/libv2ray_main.go
          echo ${x_short_version} | xargs -I '{}' sed -i 's/fmt.Sprintf("Lib v%d, Xray-core v%s", version, v2core.Version())/fmt.Sprintf("(Lib)Xray-core v%s", v2core.Version()+"@{}")/g' ${{ github.workspace }}/build/AndroidLibXrayLite/libv2ray_main.go
          cat ${{ github.workspace }}/build/AndroidLibXrayLite/libv2ray_main.go