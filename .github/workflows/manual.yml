name: BUILD_APK_BY_MANUAL

on:
  workflow_dispatch:
    inputs:
      x_branch:
        description: "指定Xray-core分支"
        required: true
        default: "main"
        type: choice
        options:
          - "main"
      x_commit_id:
        description: "指定Xray-core使用commit id版本"
        required: true
        default: "HEAD~0"
        type: string
      x_lib_repo:
        description: "指定AndroidLibXrayLite仓库"
        required: true
        default: "DTCproto"
        type: choice
        options:
          - "DTCproto"
          - "2dust"
      x_lib_branch:
        description: "指定~XrayLite分支"
        required: true
        default: "main"
        type: choice
        options:
          - "main"
      x_lib_commit_id:
        description: "指定~XrayLite使用commit id版本"
        required: true
        default: "HEAD~0"
        type: string
      ng_repo:
        description: "指定v2rayNG仓库"
        required: true
        default: "2dust"
        type: choice
        options:
          - "DTCproto"
          - "2dust"
      ng_branch:
        description: "指定v2rayNG分支"
        required: true
        default: "master"
        type: choice
        options:
          - "master"
      ng_commit_id:
        description: "指定v2rayNG使用commit id版本"
        required: true
        default: "HEAD~0"
        type: string
      build_xray_elf:
        description: "build xray"
        default: false
        type: boolean
      release_archives:
        description: "enable release archives"
        default: true
        type: boolean

concurrency:
  group: ${{ github.workflow }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    outputs:
      xray_short_commit_id: ${{ steps.set_global_params.outputs.xray_short_commit_id }}
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: 'true'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
      - name: java version
        run: |
          java --version

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"
      - name: Install gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      #- name: Set up Gradle
      #  uses: gradle/actions/setup-gradle@v4

      - name: set version
        run: |
          echo "ndk_version=29.0.13846066" >> "$GITHUB_ENV"
          echo "genproto_version=v0.0.0-20250707201910-8d1bb00bc6a7" >> "$GITHUB_ENV"
          echo "cmdline_tools_version=12266719" >> "$GITHUB_ENV"
          echo "platforms_short_version=35" >> "$GITHUB_ENV"
          echo "platforms_full_version=35.0.0" >> "$GITHUB_ENV"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          log-accepted-android-sdk-licenses: false
          cmdline-tools-version: '${{ env.cmdline_tools_version }}'
          packages: 'platforms;android-${{ env.platforms_short_version }} build-tools;${{ env.platforms_full_version }} platform-tools'

      - name: Install NDK
        run: |
          echo "y" | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager \
            --channel=0 \
            --install "ndk;${{ env.ndk_version }}"
          echo "NDK_HOME=${ANDROID_HOME}/ndk/${{ env.ndk_version }}" >> "$GITHUB_ENV"
          echo "ANDROID_NDK_HOME=${ANDROID_HOME}/ndk/${{ env.ndk_version }}" >> "$GITHUB_ENV"

      - name: Install System Tools
        run: |
          sudo apt install tree -y

      - name: git clone v2rayNG
        run: |
          mkdir -p ${{ github.workspace }}/build
          cd ${{ github.workspace }}/build
          git clone -b ${{ inputs.ng_branch }} https://github.com/${{ inputs.ng_repo }}/v2rayNG.git
          cd ${{ github.workspace }}/build/v2rayNG
          git checkout --force --quiet ${{ inputs.ng_commit_id }}
          git submodule update --init --recursive

      - name: fix Gradle Pre
        run: |
          cd ${{ github.workspace }}/build/v2rayNG/V2rayNG
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          chmod +x gradlew

      - name: edit v2rayNG applicationId(x.hev.dev)
        run: |
          cd ${{ github.workspace }}/build/v2rayNG/V2rayNG
          chmod 755 *
          sed -i 's/applicationId = "com.v2ray.ang"/applicationId = "com.xray.ang.hev.dev"/' ${{ github.workspace }}/build/v2rayNG/V2rayNG/app/build.gradle.kts

      #- name: fix v2rayNG libs version(mmkv)
      #  run: |
      #    cd ${{ github.workspace }}/build/v2rayNG/V2rayNG
      #    sed -i 's/mmkvStatic = "1.3.12"/mmkvStatic = "1.3.14"/' ${{ github.workspace }}/build/v2rayNG/V2rayNG/gradle/libs.versions.toml

      - name: add v2rayNG ndk version
        run: |
          sed -i $'10i\\\n    ndkVersion = "${{ env.ndk_version }}"' ${{ github.workspace }}/build/v2rayNG/V2rayNG/app/build.gradle.kts

      - name: import apk sign config
        run: |
          cp ${{ github.workspace }}/.github/workflows/dt.jks ${{ github.workspace }}/build/v2rayNG/V2rayNG/app/dt.jks

      - name: git clone AndroidLibXrayLite
        run: |
          mkdir -p ${{ github.workspace }}/build
          cd ${{ github.workspace }}/build
          git clone -b ${{ inputs.x_lib_branch }} https://github.com/${{ inputs.x_lib_repo }}/AndroidLibXrayLite.git
          cd ${{ github.workspace }}/build/AndroidLibXrayLite
          git checkout --force --quiet ${{ inputs.x_lib_commit_id }}

      - name: use git remote repo xray
        id: set_global_params
        run: |
          mkdir -p ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild
          cd ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild
          rm -rf Xray-core
          git clone -b ${{ inputs.x_branch }} https://github.com/XTLS/Xray-core.git
          cd ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild/Xray-core
          git checkout --force --quiet ${{ inputs.x_commit_id }}
          echo "x_short_version=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          echo "x_describe_version=$(git describe --always --dirty)" >> "$GITHUB_ENV"
          echo "xray_short_commit_id=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: edit lib version
        run: |
          sed -i 's/var version/\/\/ var version/g' ${{ github.workspace }}/build/AndroidLibXrayLite/libv2ray_main.go
          echo ${{ env.x_short_version }} | xargs -I '{}' sed -i 's/fmt.Sprintf("Lib v%d, Xray-core v%s", version, v2core.Version())/fmt.Sprintf("(Lib)Xray-core v%s", v2core.Version()+"@{}")/g' ${{ github.workspace }}/build/AndroidLibXrayLite/libv2ray_main.go
          echo ${{ env.x_short_version }} | xargs -I '{}' sed -i 's/fmt.Sprintf("Lib v%d, Xray-core v%s", version, core.Version())/fmt.Sprintf("(Lib)Xray-core v%s", core.Version()+"@{}")/g' ${{ github.workspace }}/build/AndroidLibXrayLite/libv2ray_main.go

      - name: fix lib conflict
        run: |
          cp -rf ${{ github.workspace }}/ext/nouse.go ${{ github.workspace }}/build/AndroidLibXrayLite
          cd ${{ github.workspace }}/build/AndroidLibXrayLite
          go get google.golang.org/genproto@${{ env.genproto_version }}
          go get google.golang.org/genproto/googleapis/rpc@${{ env.genproto_version }}

      - name: go get specify xray
        run: |
          cd ${{ github.workspace }}/build/AndroidLibXrayLite
          go get github.com/xtls/xray-core@${{ env.x_short_version }}
          go mod tidy

      - name: Build xray elf
        if: ${{ inputs.build_xray_elf }}
        run: |
          cd ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild/Xray-core
          echo 'Building Xray for windows(amd64)'
          mkdir -p build_assets/Xray-windows-64
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o build_assets/Xray-windows-64/xray.exe -trimpath -buildvcs=false -gcflags="all=-l=4" -ldflags="-X github.com/xtls/xray-core/core.build=${{ env.x_describe_version }} -s -w -buildid=" -v ./main
          echo 'Building Xray for linux(amd64)'
          mkdir -p build_assets/Xray-linux-64
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o build_assets/Xray-linux-64/xray -trimpath -buildvcs=false -gcflags="all=-l=4" -ldflags="-X github.com/xtls/xray-core/core.build=${{ env.x_describe_version }} -s -w -buildid=" -v ./main
          echo 'Building Xray for linux(arm64)'
          mkdir -p build_assets/Xray-linux-arm64-v8a
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o build_assets/Xray-linux-arm64-v8a/xray -trimpath -buildvcs=false -gcflags="all=-l=4" -ldflags="-X github.com/xtls/xray-core/core.build=${{ env.x_describe_version }} -s -w -buildid=" -v ./main
          tree ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild/Xray-core/build_assets
 
      - name: zip xray elf
        if: ${{ inputs.build_xray_elf }}
        run: |
          cd ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild/Xray-core/build_assets
          for bin_dir in */; do
            cd ${bin_dir}
            touch -mt $(date +%Y01010000) *
            zip -9vr ../${bin_dir%/}.zip .
            cd ../
          done
          tree ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild/Xray-core/build_assets

      - name: Build libv2ray aar
        run: |
          cd ${{ github.workspace }}/build/AndroidLibXrayLite
          gomobile init
          go mod tidy -v
          gomobile bind -v -androidapi 21 -trimpath -ldflags='-s -w -buildid=' ./
          mkdir -p ${{ github.workspace }}/build/v2rayNG/V2rayNG/app/libs
          cp *.aar ${{ github.workspace }}/build/v2rayNG/V2rayNG/app/libs/

      - name: Build ext libs(hysteria)
        run: |
          cd ${{ github.workspace }}/build/v2rayNG
          bash libhysteria2.sh
          tree ${{ github.workspace }}/build/v2rayNG/hysteria/libs/
          cp -r ${{ github.workspace }}/build/v2rayNG/hysteria/libs/* ${{ github.workspace }}/build/v2rayNG/V2rayNG/app/libs/

      - name: Build ext libs(tun2socks)
        run: |
          cd ${{ github.workspace }}/build/v2rayNG
          bash compile-tun2socks.sh
          tree ${{ github.workspace }}/build/v2rayNG/libs/
          cp -r ${{ github.workspace }}/build/v2rayNG/libs/* ${{ github.workspace }}/build/v2rayNG/V2rayNG/app/libs/

      - name: Build apk
        run: |
          tree ${{ github.workspace }}/build/v2rayNG/V2rayNG/app/libs/
          cd ${{ github.workspace }}/build/v2rayNG/V2rayNG
          ./gradlew assembleRelease -Pandroid.injected.signing.store.file=${{ github.workspace }}/build/v2rayNG/V2rayNG/app/dt.jks -Pandroid.injected.signing.store.password="dt@pwd" -Pandroid.injected.signing.key.alias="dt" -Pandroid.injected.signing.key.password="dt@pwd"

      - name: Upload xray elf
        if: ${{ inputs.build_xray_elf }}
        uses: actions/upload-artifact@v4
        with:
          name: bin-${{ env.x_short_version }}
          compression-level: 9
          path: |
            ${{ github.workspace }}/build/AndroidLibXrayLite/ActionsBuild/Xray-core/build_assets/*.zip

      - name: Upload aar
        uses: actions/upload-artifact@v4
        with:
          name: aar-${{ env.x_short_version }}
          compression-level: 9
          path: |
            ${{ github.workspace }}/build/AndroidLibXrayLite/*.aar

      - name: Upload arm dev apk
        uses: actions/upload-artifact@v4
        with:
          name: apks_arm_v8a_dev-${{ env.x_short_version }}
          compression-level: 9
          path: |
            ${{ github.workspace }}/build/v2rayNG/V2rayNG/app/build/outputs/apk/**/*.apk
            !${{ github.workspace }}/**/*null*
            !${{ github.workspace }}/**/*x86*
            !${{ github.workspace }}/**/*riscv*
            !${{ github.workspace }}/**/*mips*
            !${{ github.workspace }}/**/*armeabi*
            !${{ github.workspace }}/**/*universal*
            !${{ github.workspace }}/**/*fdroid*

      - name: Upload all dev apk
        uses: actions/upload-artifact@v4
        with:
          name: apks_all_dev-${{ env.x_short_version }}
          compression-level: 9
          path: |
            ${{ github.workspace }}/build/v2rayNG/V2rayNG/app/build/outputs/apk/**/*.apk
            !${{ github.workspace }}/**/*null*
            !${{ github.workspace }}/**/*fdroid*

  release:
    if: ${{ inputs.release_archives }}
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Get current date time
        run: |
          echo "current_date_time=$(date +'%Y-%m-%d-%H-%M')" >> "$GITHUB_ENV"

      - name: Install System Tools
        run: |
          sudo apt install tree -y

      - name: Download apks archives
        uses: actions/download-artifact@v5
        with:
          pattern: "apks_all*"
          merge-multiple: true
          path: ${{ github.workspace }}/apks

      - name: show apks files
        run: |
          tree ${{ github.workspace }}/apks

      - name: apks binaries
        run: |
          find ${{ github.workspace }}/apks/ -type f -name "*.apk" | xargs 7z a -mx9 ${{ github.workspace }}/archives/apks_all-V-${{ env.current_date_time }}.7z
          find ${{ github.workspace }}/apks/ -type f -name "*arm64-v8a.apk" | xargs 7z a -mx9 ${{ github.workspace }}/archives/apks_arm_v8a-V-${{ env.current_date_time }}.7z

      - name: Download bin archives
        uses: actions/download-artifact@v5
        if: ${{ inputs.build_xray_elf }}
        with:
          pattern: "bin*"
          merge-multiple: true
          path: ${{ github.workspace }}/bin

      - name: show bin files
        if: ${{ inputs.build_xray_elf }}
        run: |
          tree ${{ github.workspace }}/bin

      - name: bin binaries
        if: ${{ inputs.build_xray_elf }}
        run: |
          mv ${{ github.workspace }}/bin/*.zip ${{ github.workspace }}/archives/

      - name: show archives files
        run: |
          tree ${{ github.workspace }}/archives

      - name: Release archives
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "V-${{ env.current_date_time }}"
          name: "V-${{ env.current_date_time }}"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          body: |
            V2rayNG(Xray) build result. 
            Xray from [${{ inputs.x_branch }}] [${{ needs.build.outputs.xray_short_commit_id }}]
            NG from [${{ inputs.ng_repo }}] [${{ inputs.ng_branch }}]
          files: |
            ${{ github.workspace }}/archives/**
